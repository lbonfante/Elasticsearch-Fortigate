#PLEASE CHANGE NEXT LINES:
#LINE 28: FIREWALL-IP           -> replace with your firewall ip that send logs
#LINE 30: LOGSTASH-SERVER-NAME  -> replace with your syslog server name
#IF YOU WANT TO USE GEOLOCATE UNCOMENT LINES 69 TO 92

# Change redis threads count to match the number of cpus of this node
input {
        tcp {
                type => "syslog"
                port => "514"
        }
}
input {
        udp {
                type => "syslog"
                port => "514"
        }
}
filter {
        if [type] == "syslog" {
                mutate {
                        add_tag => [ "syslog" ]
                }
        }
}
# First layer of normal syslog parsing
filter {
	if !("FIREWALL-IP" in [message]) {
		mutate { 
			add_tag => ["LOGSTASH-SERVER-NAME"] 
			remove_tag => "syslog"		
		}
       	}
}
filter {
        if "syslog" in [tags] {
		mutate {
      			gsub => [
      			# fix a broken time field that comes in as "10: 00:00"; remove if you don't have this issue.
      			"message", ": ", ":"
      			]
   		}
                grok {
                        match => { "message" => "<%{POSINT:syslog_pri}>%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{GREEDYDATA:syslog_message}" }
                        add_field => [ "received_at", "%{@timestamp}" ]
                        add_field => [ "received_from", "%{host}" ]
			add_tag => ["FORTIGATE"]  		 #ETIQUETA
                }
		kv {
			source => "syslog_message"			
			field_split => ","
		}
                mutate {
                        convert => {
                                "rcvdbyte" => "integer"
                                "sentbyte" => "integer"
                                "duration" => "integer"
                                "sentpkt"  => "integer"
                                "rcvdpkt"  => "integer"
                        }
                        replace => [ "message", "%{syslog_message}" ]
 			remove_field => "syslog_message"			
                }
                syslog_pri { }
                date {
                        match => [ "syslog_timestamp", "MMM d HH:mm:ss", "MMM dd HH:mm:ss", "ISO8601" ]
                        timezone => "America/Bogota"
                }
#Configuramos Geolocalizacion:
#   		geoip {
#      			source => "srcip"
#                        target => "geosrcip"
#		      	database => "/opt/logstash/vendor/geoip/GeoLiteCity.dat"
#                        add_field => [ "[geosrcip][coordinates]", "%{[geosrcip][longitude]}" ]
#                        add_field => [ "[geosrcip][coordinates]", "%{[geosrcip][latitude]}"  ]
#   		}
#                geoip {
#                        source => "dstip"
#                        target => "geodstip"
#                        database => "/opt/logstash/vendor/geoip/GeoLiteCity.dat"
#                        add_field => [ "[geodstip][coordinates]", "%{[geodstip][longitude]}" ]
#                        add_field => [ "[geodstip][coordinates]", "%{[geodstip][latitude]}"  ]
#                }
#                mutate {
#                        convert => [ "[geoip][coordinates]", "float" ]
#		 }
#                if !("_grokparsefailure" in [tags]) {
#                        mutate {
#                                replace => [ "host", "%{syslog_hostname}" ]
#                                replace => [ "@source_host", "%{syslog_hostname}" ]
#                        }
#                }
        }
}

# Create @source_host_ip field for all devices for IP Tracking used along with src_ip and dst_ip fields
filter {
        if [srcip] {
                mutate {
                        add_field => { "srcname_dns" => "%{srcip}" }
                }
                dns {
                        reverse  => [ "srcname_dns" ]
                        action => "replace"    #Para anexar: action => "append"
                }
                mutate {
                        rename => [ "srcname_dns", "@srcname_dns" ]
                }
        }
}
# The below filter section will be used to remove unnecessary fields to keep ES memory cache from filling up with useless data
# The below filter section will be where you would want to comment certain types or tags out if trying to isolate a logging issue
filter {
        if "syslog" in [tags] {
                mutate {
                        remove_field => [ "host", "received_at", "received_from", "syslog_hostname", "syslog_message", "syslog_facility", "syslog_facility_code", "syslog_pri", "syslog_pri", "syslog_severity", "syslog_severity_code", "@version", "devid" ]
			remove_tag => "syslog"
                }
        }
}
# Send output to local elasticsearch instance
# Change to one of the other modes and comment out below if needed
output {
        elasticsearch_http {
                host => "127.0.0.1"
                flush_size => 1
		template_overwrite => true
                manage_template => true
                template => "/opt/logstash/lib/logstash/outputs/elasticsearch/elasticsearch-template.json"
        }
}
